version: '3.8'

services:
  stellar-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      # Firebase 配置（需要在部署時設置）
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
      - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
      # R2 配置（需要在部署時設置）
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
      - R2_ACCESS_KEY_ID=${R2_ACCESS_KEY_ID}
      - R2_SECRET_ACCESS_KEY=${R2_SECRET_ACCESS_KEY}
      - R2_BUCKET_NAME=${R2_BUCKET_NAME}
      - R2_PUBLIC_URL=${R2_PUBLIC_URL}
      # Google Maps API
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      # 前端 URL（用於 CORS）
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "dist/src/healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # 資源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # 開發用服務（可選）
  stellar-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    profiles:
      - dev